---
import tinycolor from 'tinycolor2';

interface ColorItem {
  name: string;
  color: string;
}

interface PaletteProps {
  data: ColorItem[];
}

const { data } = Astro.props as PaletteProps;

const mixColors = (color1: string, color2: string, weight: number): string => {
  return tinycolor.mix(color1, color2, weight).toHexString();
};

const generateShades = (color: string): string[] => {
  const shades: string[] = [];
  for (let i = 6; i >= 1; i--) {
    shades.push(mixColors(color, 'white', i * 10));
  }

  shades.push(color);
  for (let i = 1; i <= 6; i++) {
    shades.push(mixColors(color, 'black', i * 10));
  }

  return shades;
};
---

<style>
.colorPalette {
  align-items: center;
  display: flex;
  flex-direction: column;
  gap: 20px;
  margin-bottom: 1.2rem;
  margin-top: 20px;
  width: 100%;
}

.colorLineTitle {
  margin-bottom: 4px;
}

.colorLine {
  align-items: end;
  display: flex;
  gap: 10px;
}

.colorSwatchContainer {
  align-items: center;
  border-radius: 5px;
  color: #fff;
  display: flex;
  font-size: 12px;
  height: 40px;
  justify-content: center;
  position: relative;
  width: 80px;
}

.colorSwatchContainer::after {
  background-color: #e3e3e3;
  border-radius: 3px;
  color: #1a1c22;
  content: attr(data-tooltip);
  font-size: 12px;
  left: 50%;
  opacity: 0;
  padding: 5px 10px;
  pointer-events: none;
  position: absolute;
  top: -40px;
  transform: translateX(-50%);
  transition: opacity 0.2s ease-in-out;
  white-space: nowrap;
}

.colorSwatchContainer:hover::after {
  opacity: 1;
}

@media (max-width: 800px) {
  .colorLine {
    align-items: flex-start;
    flex-direction: column;
  }

  .colorSwatchContainer {
    margin-bottom: 10px;
    width: 100%;
  }
}
</style>

<div class="colorPalette">
  {data.map((colorItem) => {
    const shades = generateShades(colorItem.color);
    return (
      <div style="width: 100%;">
        <div class="colorLineTitle">{colorItem.name}</div>
        <div class="colorLine">
          {shades.map((value) => (
            <div class="colorSwatchContainer" style={`background-color: ${value}`} data-tooltip={value}></div>
          ))}
        </div>
      </div>
    );
  })}
</div>
